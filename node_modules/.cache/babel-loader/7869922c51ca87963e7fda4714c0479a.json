{"ast":null,"code":"export const groupArrayElements = (input, size) => {\n  if (!Array.isArray(input)) {\n    throw new Error(`ArgumentError: Expected \\`input\\` to be of type \\`array\\` but received ${typeof input}`);\n  }\n\n  if (input.length <= 0) {\n    throw new Error(`ArgumentError: Expected valid array `);\n  }\n\n  if (typeof size !== \"number\" || size === 0) {\n    throw new Error(\"ArgumentError: Expected valid subarray number greater than 0\");\n  }\n\n  if (input.length < size) {\n    throw new Error(`ArgumentError: array cannot be divide in ${size} subarrays`);\n  }\n\n  const result = [];\n\n  for (let i = size; i > 0; i--) {\n    result.push(input.splice(0, Math.ceil(input.length / i)));\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/user/Downloads/Pune/TwingCode/src/groupArrayElements.js"],"names":["groupArrayElements","input","size","Array","isArray","Error","length","result","i","push","splice","Math","ceil"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAL,EAA2B;AACzB,UAAM,IAAII,KAAJ,CACH,0EAAyE,OAAOJ,KAAM,EADnF,CAAN;AAGD;;AAED,MAAIA,KAAK,CAACK,MAAN,IAAgB,CAApB,EAAuB;AACrB,UAAM,IAAID,KAAJ,CAAW,sCAAX,CAAN;AACD;;AAED,MAAI,OAAOH,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,CAAzC,EAA4C;AAC1C,UAAM,IAAIG,KAAJ,CACJ,8DADI,CAAN;AAGD;;AAED,MAAIJ,KAAK,CAACK,MAAN,GAAeJ,IAAnB,EAAyB;AACvB,UAAM,IAAIG,KAAJ,CACH,4CAA2CH,IAAK,YAD7C,CAAN;AAGD;;AAED,QAAMK,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAGN,IAAb,EAAmBM,CAAC,GAAG,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7BD,IAAAA,MAAM,CAACE,IAAP,CAAYR,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgBC,IAAI,CAACC,IAAL,CAAUX,KAAK,CAACK,MAAN,GAAeE,CAAzB,CAAhB,CAAZ;AACD;;AACD,SAAOD,MAAP;AAED,CA9BM","sourcesContent":["export const groupArrayElements = (input, size) => {\n  if (!Array.isArray(input)) {\n    throw new Error(\n      `ArgumentError: Expected \\`input\\` to be of type \\`array\\` but received ${typeof input}`\n    );\n  }\n\n  if (input.length <= 0) {\n    throw new Error(`ArgumentError: Expected valid array `);\n  }\n\n  if (typeof size !== \"number\" || size === 0) {\n    throw new Error(\n      \"ArgumentError: Expected valid subarray number greater than 0\"\n    );\n  }\n\n  if (input.length < size) {\n    throw new Error(\n      `ArgumentError: array cannot be divide in ${size} subarrays`\n    );\n  }\n\n  const result = [];\n\n  for (let i = size; i > 0; i--) {\n    result.push(input.splice(0, Math.ceil(input.length / i)));\n  }\n  return result;\n\n};\n"]},"metadata":{},"sourceType":"module"}