{"ast":null,"code":"import { Validator } from './validator';\nexport const chunkedArrayFunction = (array, numberOfSubArray) => {\n  const isValidationSuccessful = Validator(array, numberOfSubArray);\n\n  if (!isValidationSuccessful.status) {\n    return isValidationSuccessful.message;\n  }\n\n  console.log(\"if\");\n  var noOfElementInOneArray = Math.ceil(array.length / numberOfSubArray);\n  let newArray = [];\n  let index = 0;\n\n  while (index < array.length) {\n    newArray.push(array.slice(index, index + noOfElementInOneArray));\n    index = index + noOfElementInOneArray;\n  }\n\n  return newArray;\n};","map":{"version":3,"sources":["/home/user/Downloads/Pune/TwingCode/src/chunkedArray.js"],"names":["Validator","chunkedArrayFunction","array","numberOfSubArray","isValidationSuccessful","status","message","console","log","noOfElementInOneArray","Math","ceil","length","newArray","index","push","slice"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,gBAAR,KAA6B;AAC/D,QAAMC,sBAAsB,GAAGJ,SAAS,CAACE,KAAD,EAAOC,gBAAP,CAAxC;;AAEA,MAAG,CAACC,sBAAsB,CAACC,MAA3B,EAAkC;AAChC,WAAOD,sBAAsB,CAACE,OAA9B;AACD;;AAECC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,MAAIC,qBAAqB,GAAGC,IAAI,CAACC,IAAL,CAAUT,KAAK,CAACU,MAAN,GAAeT,gBAAzB,CAA5B;AACA,MAAIU,QAAQ,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAGZ,KAAK,CAACU,MAArB,EAA6B;AAC3BC,IAAAA,QAAQ,CAACE,IAAT,CAAcb,KAAK,CAACc,KAAN,CAAYF,KAAZ,EAAmBA,KAAK,GAAGL,qBAA3B,CAAd;AACAK,IAAAA,KAAK,GAAGA,KAAK,GAAGL,qBAAhB;AACD;;AACD,SAAOI,QAAP;AAGH,CAlBM","sourcesContent":["import {Validator} from './validator';\n\nexport const chunkedArrayFunction = (array, numberOfSubArray) => {\n  const isValidationSuccessful = Validator(array,numberOfSubArray);\n  \n  if(!isValidationSuccessful.status){\n    return isValidationSuccessful.message\n  }\n   \n    console.log(\"if\")\n    var noOfElementInOneArray = Math.ceil(array.length / numberOfSubArray);\n    let newArray = [];\n    let index = 0;\n    while (index < array.length) {\n      newArray.push(array.slice(index, index + noOfElementInOneArray));\n      index = index + noOfElementInOneArray;\n    }\n    return newArray;\n  \n\n};\n"]},"metadata":{},"sourceType":"module"}